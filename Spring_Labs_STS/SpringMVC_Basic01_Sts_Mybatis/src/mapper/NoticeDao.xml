<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="dao.NoticeDao">
	
	<!--  
	//게시물 개수
	public int getCount(String field, String query) throws ClassNotFoundException, SQLException;

	//전체 게시물
	public List<Notice> getNotices(int page, String field, String query) throws ClassNotFoundException, SQLException;
	
	//게시물 삭제
	public int delete(String seq) throws ClassNotFoundException, SQLException;
	 
	//게시물 수정
	public int update(Notice notice) throws ClassNotFoundException, SQLException;
	
	//게시물 상세
	public Notice getNotice(String seq) throws ClassNotFoundException, SQLException;
	
	//게시물 입력
	public int insert(Notice n) throws ClassNotFoundException, SQLException;
	
	-->
	
	
	<!--  
		parameter 1개 (생략) >> parameterType=""
		parameter 2개 이상 ... DTO도 없다? >> hashMap OK 귀차너
		parameter 2개 이상 ... >> DTO ok
		
		그래서
		param 순서대로 받는 방법
		> String field > 내부에서 param1
		> Stting field > 내부에서 param2
	-->
	
	<select id="getCount" resultType="Integer">
		"SELECT COUNT(*) CNT 
		FROM NOTICES 
		WHERE ${param1} LIKE '%${param2}%"
	</select>
	
	<select id="getNotices" resultType="vo.Notice">
		
		<!--  
		받은 parameter logic 생성
		int srow = 1 + (page-1)*5;
		int erow = 5 + (page-1)*5;
		
		parameter : int page, String field, String query
		param1, param2, param3
		
		return : Notice(DTO) 
		-->
		
		SELECT * FROM
			(SELECT ROWNUM NUM, N.* FROM 
				(SELECT * 
				FROM NOTICES WHERE ${param2} LIKE '%${param3}%' 
				ORDER BY REGDATE DESC) N
			)
		WHERE NUM BETWEEN 1 + (${param1}-1)*5 AND 5 + (${param1}-1)*5
	</select>
	
	
	<select id="getNotice" resultType="vo.Notice">
		SELECT seq,title,writer,content,regdate,hit,filesrc,filesrc2 
		FROM NOTICES 
		WHERE SEQ=#{seq}
	</select>
	
	<delete id="delete">
		DELETE NOTICES WHERE SEQ=#{seq}
	</delete>
	
	<!--  
	
	int update(Notice notice)
	팡리 수정 : null, null
	한개 수정 : 1.jpg, null
	두개 수정 : 1.jpg, 2.jpg
	
	-->
	<update id="update" parameterType="vo.Notice">
		UPDATE NOTICES 
		SET TITLE=#{title}, 
		CONTENT=#{content}, 
		FILESRC=#{fileSrc, jdbcType=VARCHAR}, 
		FILESRC2=#{fileSrc2, jdbcType=VARCHAR} 
		WHERE SEQ=#{seq}
	</update>
	
	<insert id="insert" parameterType="vo.Notice">
<!-- 		INSERT INTO 
		NOTICES(SEQ, TITLE, CONTENT, WRITER, REGDATE, HIT, FILESRC , FILESRC2) 
		VALUES( (SELECT MAX(TO_NUMBER(SEQ))+1 
				FROM NOTICES), 
		#{title}, 
		#{content}, 
		'bituser', 
		SYSDATE, 
		0, 
		#{filesrc, jdbcType=VARCHAR},
		#{filesrc2, jdbcType=VARCHAR}) -->
		
		<selectKey order="BEFORE" keyProperty="seq" resultType="String">
			SELECT MAX(TO_NUMBER(SEQ))+1 
				FROM NOTICES
		</selectKey>
		INSERT INTO 
		NOTICES(SEQ, TITLE, CONTENT, WRITER, REGDATE, HIT, FILESRC , FILESRC2) 
		VALUES( 
			#{seq}, 
			#{title}, 
			#{content}, 
			'bituser', 
			SYSDATE, 
			0, 
			#{fileSrc, jdbcType=VARCHAR},
			#{fileSrc2, jdbcType=VARCHAR})
	</insert>
	
</mapper>