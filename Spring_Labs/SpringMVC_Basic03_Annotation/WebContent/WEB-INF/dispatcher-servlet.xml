<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context = "http://www.springframework.org/schema/context"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
        				https://www.springframework.org/schema/beans/spring-beans.xsd
        				http://www.springframework.org/schema/context
        				https://www.springframework.org/schema/context/spring-context.xsd">
	
	<!--  
		의존 관계에 필요한 빈 객체 자동 생성
		@Autowired, @Resource 동작하기 위한 빈 객체를 미리 만들어쥼
		<context:annotation-config/>
		
		
		****<context:component-scan base-package="com.controller"/>****
		선언부에 있으면 
		
		@Component
		@Repository dao, dto
		@Service
		@Controller
		
		annotation 을 가진 class 에 대해서 
		<bean id=""> 별도로 생성할 필요가 없다
		자동으로 빈 객체 생성 됩니다
	-->
	
	<context:annotation-config/>
	
	<!-- 공통 빈 -->
	
	<bean id="internalResourceViewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix">
			<value>/WEB-INF/views/</value>
		</property>
		<property name="suffix">
			<value>.jsp</value>
		</property>
	</bean>
	
	<!-- TEST_1 -->
	<!--  
	component-scan 으로 작업하기 설명
	-->
	
	<bean id="helloController" class="com.controller.HelloController"/>
	
	
	<!-- TEST_2 -->
	<!--  
	하나의 요청 주소 : GET, POST 처리
	화면단, 처리단 (로그인화면, 로그인처리 : 글쓰기화면, 글쓰기처리 ......)
	전제조건 : 요청 주소가 같다 
	
	id, name 참조가 (injection) (0)
	
	@Autowired >> com.service.ArticleService
	-->
	
	<bean class="com.controller.NewArticleController"></bean>
	<bean class="com.service.ArticleService"></bean>
	
	<!-- TEST_3 : Get, Post (List<>)-->
	<bean class="com.controller.OrderController"></bean>
	
	<!-- TEST_4 -->
	<!-- PARAMETER 설정하기 (@RequestParam 연습하기) -->
	<bean class="com.controller.SearchController"></bean>
	
	
	<!-- TEST_5 -->
	<!--  
		@Cookievalue annotation 사용하기
	-->
	<bean class="com.controller.CookieController"></bean>
	
	
	<!-- TEST_6 -->
	<!--  
	import org.springframework.web.multipart.commons.CommonsMultipartResolver;
	import org.springframework.web.multipart.commons.CommonsMultipartFile;
	
	CommonsMultipartFile 을 사용하기 위해서는 
	 >> CommonsMultipartResolver 객체가 IOC 컨테이너 안에 생성되어 있어야 한다
	
	CommonsMultipartResolver 역할 : Upload 파일의 정보를 관리 (크기 , 이름 .....)
	
	의존객체 :
	com.springsource.org.apache.commons.fileupload
	com.springsource.org.apache.commons.io
	
	-->
	
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="maxUploadSize" value="10485760"></property>
		<!-- 파일크기 10MB 이하 로 설정 -->
	</bean>
	
	<bean class="com.controller.ImageController"></bean>
	
</beans>