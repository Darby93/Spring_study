<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context = "http://www.springframework.org/schema/context"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
        				https://www.springframework.org/schema/beans/spring-beans.xsd
        				http://www.springframework.org/schema/context
        				https://www.springframework.org/schema/context/spring-context.xsd">
	
	<!--  
		MonitorViewer viewer = new MonitorViewer();
		Recorder recorder = new Recorder();
		
		viewer.setRecorder(recorder);
	-->
	<!--
	
	1단계 : xml 설정기반으로 DI 작업 
	<bean id="recorder" class = "DI_Annotation_01.Recorder"></bean>
	<bean id="viewer" class="DI_Annotation_01.MonitorViewer">
		<property name="recorder">
			<ref bean="recorder"/>
		</property>
	</bean>
	-->
	
	<!--  
	
	2단계 Annotation 기반으로 DI 작업
	Annotation 은 (JAVA API, SpringFrameWork 제공)
	
	@Autowired > By Type기반
	목적 : 의존관계를 자동설정할 때 사용하며 [타입을 이용]하여 의존하는 객체를 삽입해 준다. 
	그러므로 (IOC Container) 해당 타입의 빈객체가 존재하지 않거나 또는 2개 이상 존재할 경우 
	스프링은 예외를 발생시키게 된다.
	
	설정 위치 : 생성자, 필드, 메소드(굳이 setter메소드가 아니여도 된다)
	*추가설정 : AutowiredAnnotationBeanPostProcessor 클래스를 빈으로 등록시켜줘야 한다. 
	
	**@Autowired 적용되기 위해서는 선행 작업
	import org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor;
	빈 객체로 등록되어 있어야  @Autowired 정상 동작
	
	<bean id="ap" class="org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor"/>
	너무힘들어서 .. ㅠ 
	 >>>>>>> <context:annotation-config/> 이거하나면 다해결됨!
			Annotation 필요한 모든 빈 객체를 자동 등록 ..........
			단점) 사용하지 않는 bean도 자동 등록이 되요!
	 
	 **@Autowired 정상 동작 하지 않는 경우
	 1. injection 되는 타입의 bean 객체가 ioc 컨테이너 안에 없는 경우 !(exception)
	 2. IOC컨테이너 안에 같은 타입의 bean 객체가 IOC 컨테이너 안에 있는 경우 !
		<bean id="b" class = "DI_Annotation_01.Recorder"/>
		<bean id="c" class = "DI_Annotation_01.Recorder"/>
	
	 3. IOC컨테이너 안에 같은 타입의 객체가 여러개 존재 하더라도 
	    public void setRecorder(Recorder recorder) {}
	        함수의 PARAMETER 이름 : recorder
	        예외적으로 parameter 이름과 동일한 id를 가진 bean 객체가 존자한다면 !!! 뻑안나고 돌아감!
		원칙 @Resource (by name)
		
		
		
	-->
	
	<context:annotation-config/>
	<!-- <bean id="ap" class="org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor"/> -->
	<bean id="recorder" class = "DI_Annotation_01.Recorder"/>
	<bean id="viewer" class="DI_Annotation_01.MonitorViewer"/>
	<bean id="a" class = "DI_Annotation_01.Recorder"/>
	<bean id="b" class = "DI_Annotation_01.Recorder"/>
	<bean id="c" class = "DI_Annotation_01.Recorder"/>
	
	
</beans>